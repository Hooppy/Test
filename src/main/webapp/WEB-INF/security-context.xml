<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd">
	
	<!-- <alias name="filterChainProxy" alias="springSecurityFilterChain"/>  
    <bean id="filterChainProxy" class="org.springframework.security.web.FilterChainProxy" /> -->
	
	<security:http pattern="/resources/**" security="none" />
	<security:http pattern="/resources/**/*.*" security="none" />
	
	<security:http auto-config="true" use-expressions="true">
		<security:intercept-url pattern="/login" access="permitAll" />
		<security:intercept-url pattern="/login/fail" access="permitAll" />
		<security:intercept-url pattern="/login/success" access="permitAll" />
		<security:intercept-url pattern="/new" access="permitAll" />
    	<security:intercept-url pattern="/create" access="permitAll" />
    	<security:intercept-url pattern="/admin/**" access="hasAuthority('USER_MANAGER')" />
    	<security:intercept-url pattern="/welcome" access="hasRole('USER')" />
    	<security:intercept-url pattern="/logouts" access="permitAll" />
    	<security:intercept-url pattern="/box" access="permitAll" />
    	<security:intercept-url pattern="/goPdf" access="hasRole('USER')" />
    	<security:intercept-url pattern="/**" access="hasRole('USER')" />
    	
    	<!-- 로그인 후 권한 없는 페이지 접근시 page 처리 -->
    	<security:access-denied-handler ref="accessDenied" />
    	
    	<!-- form action과 login-processing-url을 동일하게 맞춰주면 spring security 탐 -->
   	 	<security:form-login 
   	 	username-parameter="username"
   	 	password-parameter="password"
   	 	login-page="/login"
   	 	login-processing-url="/login/check"
   	 	authentication-success-handler-ref="customAuthenticationSuccessHandler"
   	 	authentication-failure-handler-ref="customAuthenticationFailureHandler"
   	 	/>
   	 	
   	 	<!-- logout 실행 -->
    	<security:logout logout-url="/logout" success-handler-ref="logoutSuccessHandler" invalidate-session="true" />
	</security:http>
	
	<!--  provider  -->
	<!-- <security:authentication-manager>
	    <security:authentication-provider>
	        <security:user-service>
	        	<security:user name="admin" password="admin" authorities="ROLE_ADMIN" />
	            <security:user name="user" password="user" authorities="ROLE_USER" />
	        </security:user-service>
	    </security:authentication-provider>
	</security:authentication-manager> -->
	
	<!-- login -->
	<bean id="customAuthenticationSuccessHandler" class="com.test.handler.CustomAuthenticationSuccessHandler"></bean>
	<bean id="customAuthenticationFailureHandler" class="com.test.handler.CustomAuthenticationFailureHandler"></bean>
	
	<!-- logout -->
	<bean id="logoutSuccessHandler" class="com.test.handler.LogoutSuccessHandler"></bean>

	<!-- void setErrorPage Method -->
	<bean id="accessDenied" class="com.test.handler.CustomAccessDeniedHandler">
		<property name="errorPage" value="/error"></property>
	</bean>

	<bean id="customUserDetailsService" class="com.test.security.CustomUserDetailsService"></bean>
 	<bean id="customAuthenticationProvider" class="com.test.security.CustomAuthenticationProvider"></bean> 
 	
 	<!-- salt값 必 -->
 	<!-- <bean id="passwordEncoder" class="org.springframework.security.authentication.encoding.ShaPasswordEncoder">
 		<constructor-arg name="strength" value="512"></constructor-arg>
 	</bean> -->
 	
 	<!-- salt값 자동생성 -->
 	<bean id="passwordEncoder" class="org.springframework.security.crypto.password.StandardPasswordEncoder"></bean>
	
	<security:authentication-manager alias="authenticationManager">
	  <security:authentication-provider ref="customAuthenticationProvider">
	  </security:authentication-provider>
	  <security:authentication-provider user-service-ref="customUserDetailsService">
	     <security:password-encoder ref="passwordEncoder"></security:password-encoder>
	  </security:authentication-provider>
	</security:authentication-manager>
		
</beans>